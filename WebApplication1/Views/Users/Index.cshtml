@model IEnumerable<DomainPsr03951.Models.User>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
<link href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<h2>Index</h2>
@using (Html.BeginForm("Export", "Users", null, FormMethod.Post))
{
    <input type="submit" value="Export" />
}

<p>
    <a asp-action="Create">Create New</a>
</p>
<table id="myTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CountryId)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreationDate)
            </th>


            <th>
                @Html.DisplayNameFor(model => model.EmailAdress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsInactive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeactiveDate)
            </th>


            <th>
                @Html.DisplayNameFor(model => model.GravatarUrl)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.IdGroup)
            </th>
            <th>Edit</th>
            <th>Delete</th>

        </tr>
    </thead>
    <tbody>
        @*@foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.id)
                        </td>
                        <td>
                            @Html.DisplayNameFor(modelItem => item.CountryId)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.CreationDate)
                        </td>

                        <td>
                            @Html.DisplayFor(model => item.EmailAdress)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Gender)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.PhoneNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.IsInactive)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.DeactiveDate)
                        </td>

                        <td>
                            @Html.DisplayFor(model => item.GravatarUrl)
                        </td>

                        <td>
                            @Html.DisplayFor(model => item.IdGroup)
                        </td>

                    </tr>

            }*@
    </tbody>
    <tfoot>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CountryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.CreationDate)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.EmailAdress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>


            <th>
                @Html.DisplayNameFor(model => model.IsInactive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeactiveDate)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.GravatarUrl)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.IdGroup)
            </th>
            <th>Edit</th>
            <th>Delete</th>

        </tr>
    </tfoot>
</table>
@* Load datatable css *@
<link href="//cdn.datatables.net/1.10.9/css/jquery.dataTables.min.css" rel="stylesheet" />
@section Scripts{
    @* Load DataTable js here *@
    <script src="//cdn.datatables.net/1.10.9/js/jquery.dataTables.min.js"></script>

    <script>
        var datatableVariable = $('#myTable').DataTable({

                        serverSide: true,
                        processing: true,

                        ajax: {
                            url: '@Url.Action("DataHandler", "Users")',
                            type: "POST"
                        },
                        rowId:'id',
                        columns: [
                                 { "data": "id", "name": "Id", "autoWidth": true, "defaultContent": "lalal" },
                                 { "data": "CountryId", "name": "CountryId", "autoWidth": true, "defaultContent": "lalal" },
                                 { "data": "FirstName", "name": "FirstName", "autoWidth": true, "defaultContent": "lalal" },
                                 { "data": "LastName", "name": "LastName", "autoWidth": true, "defaultContent": "lalal" },

                                 { "data": "CreationDate_FORMAT", "name": "CreationDate", "autoWidth": true, "defaultContent": "lalal" },
                                 { "data": "EmailAdress", "name": "EmailAdress", "autoWidth": true, "defaultContent": "lalal" },
                                 { "data": "Gender", "name": "Gender", "autoWidth": true, "defaultContent": "lalal" },
                                 { "data": "PhoneNumber", "name": "PhoneNumber", "autoWidth": true, "defaultContent": "lalal" },

                                 { "data": "IsInactive", "name": "IsInactive", "autoWidth": true},
                                 { "data": "DeactiveDate_FORMAT", "name": "DeactiveDate", "autoWidth": true, "defaultContent": "lalal" },
                                 { "data": "GravatarUrl", "name": "GravatarUrl", "autoWidth": true, "defaultContent": "lalal" },
                                 { "data": "IdGroup", "name": "IdGroup", "autoWidth": true, "defaultContent": "lalal" },


                                 {
                                     "render": function (data, type, full, meta) { return '<a class="btn btn-info" href="/Users/Edit/' + full.id + '">Edit</a>'; }
                                 },
                                 {
                                     data: null, render: function (data, type, row) {

                                         return "<a  class='btn btn-danger' onclick=DeleteData('" + row.id + "'); >Delete</a>";
                                     }
                                 },
                        ],




        });

        $('#myTable tfoot th').each(function () {
            var placeHolderTitle = $('#myTable thead th').eq($(this).index()).text();
            $(this).html('<input type="text" class="form-control input input-sm; placeholder = "Search ' + placeHolderTitle + '" />');
        });
        datatableVariable.columns().every(function () {
            var column = this;
            $(this.footer()).find('input').on('keyup change', function () {
                column.search(this.value).draw();
            });
        });
        $('.showHide').on('click', function () {
            var tableColumn = datatableVariable.column($(this).attr('data-columnindex'));
            tableColumn.visible(!tableColumn.visible());
        });


        function DeleteData(id) {
            if (confirm("Are you sure you want to delete ...?")) {
                Delete(id);
            }
            else {
                return false;
            }
        }
        function Delete(id) {
            $.ajax({
                url: 'Users/Delete/',
                data: { id: id }
            }).done(function () {
                alert('Deleted');
            });
        }
       @*function Delete(id)
    {
         var url = '@Url.Content("~/")' + "Users/Delete";

            $.post(url, { ID: id }, function (data)
                {
                    if (data)
                    {
                        oTable = $('#myTable').DataTable();
                        oTable.draw();
                    }
                    else
                    {
                        alert("Something Went Wrong!");
                    }
                });
    }


        function Delete(id)
    {

    }*@

    </script>

}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
